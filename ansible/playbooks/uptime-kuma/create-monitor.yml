---
- name: Uptime Kuma create monitor
  # Run locally on server as its an python package from ansible galaxy
  hosts: localhost
  connection: local
  vars_files:
    - uptimekuma_monitors.yml
    - uptimekuma_config.yml
  tasks:

    - name: Login with credentials once and register the result
      lucasheld.uptime_kuma.login:
        api_url: "{{ api_url }}"
        api_username: "{{ api_username }}"
        api_password: "{{ api_password }}"
      register: result

    - name: Extract the token from the result and set it as fact
      ansible.builtin.set_fact:
        api_token: "{{ result.token }}"

    # Next two tasks are split into 2 as Docker and HTTP require different parameters
    - name: Login by token and create a monitor for **HTTP** by looping over YAML entries
      lucasheld.uptime_kuma.monitor:
        api_url: "{{ api_url }}"
        api_token: "{{ api_token }}"
        name: "{{ item.name }}"
        type: "{{ item.type }}"
        url: "{{ item.url }}"
        state: present
      # Note the loop here to the HTTP section of yaml file
      loop: "{{ monitors_http | flatten(levels=1) }}"

    - name: Login by token and create a monitor for **docker** by looping over YAML entries
      lucasheld.uptime_kuma.monitor:
        api_url: "{{ api_url }}"
        api_token: "{{ api_token }}"
        name: "{{ item.name }}"
        type: "{{ item.type }}"
        docker_host: "{{ item.docker_host }}"
        docker_container: "{{ item.docker_container }}"
        state: present
      # Note the loop here to the DOCKER section of yaml file
      loop: "{{ monitors_docker | flatten(levels=1) }}"

    #  # Create a single monitor for Home assistant
    # - name: Login by token and create a monitor
    #   lucasheld.uptime_kuma.monitor:
    #     api_url: "{{ api_url }}"
    #     api_token: "{{ api_token }}"
    #     name: Home Assistant
    #     type: http
    #     url: http://homeassistant.server:8123
    #     state: present
